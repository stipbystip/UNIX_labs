version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile

    depends_on:
      - kafka
    environment:
      KAFKA_BROKER_URL: kafka:9092
      KAFKA_TOPIC: my-topic

      HOSTNAME: "producer-{{.Task.Slot}}"
    deploy:
      replicas: 2

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile

    depends_on:
      - kafka
    environment:
      KAFKA_BROKER_URL: kafka:9092
      KAFKA_TOPIC: my-topic
      KAFKA_GROUP_ID: my-consumer-group

      HOSTNAME: "consumer-{{.Task.Slot}}"
    deploy:
      replicas: 3

networks:
  default:
    driver: bridge
